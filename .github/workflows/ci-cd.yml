name: Run CI and potentially release
on:
  pull_request:
  push:
    branches: [master]
jobs:
  static-checks:
    runs-on: ubuntu-20.04
    name: static-checks
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 14
      - name: Get npm cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-root-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-root-
      - run: npm ci
      - run: npm run static-checks
  ci:
    name: ci-${{ matrix.os }}
    needs: static-checks
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: 14
      - name: Get npm cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-monorepo-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-monorepo-
      - run: npm ci
      - run: npm ci
        working-directory: packages/daemon
      - run: npm install
        working-directory: packages/ui
      - run: npm run install-daemon
        working-directory: packages/ui
      - run: npm run build
      - run: npm run test:ci
      - run: npm run dist
        if: ${{ startsWith(matrix.os, 'macos-') == false }}
        working-directory: packages/ui
        env:
          CSC_LINK: ${{ secrets.WINDOWS_CODE_SIGNING_CERT }}
          CSC_KEY_PASSWORD: ${{ secrets.WINDOWS_CODE_SIGNING_PASSWORD }}

  release:
    name: Release
    needs: ci
    if: false
#    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
