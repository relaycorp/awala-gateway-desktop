name: Continuous Integration
on:
  pull_request:
  push:
    branches: [master]
jobs:
  static-checks:
    runs-on: ubuntu-20.04
    name: static-checks
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 14
      - name: Get npm cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-root-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-root-
      - run: npm ci
      - run: npm run static-checks
  ci:
    name: ci-${{ matrix.os }}
    needs: static-checks
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: 14
      - name: Get npm cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ matrix.os }}-monorepo-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ matrix.os }}-monorepo-

      # TODO: Use `lerna bootstrap` (https://github.com/relaycorp/awala-gateway-desktop/issues/186)
      - run: npm ci
      - run: ../../node_modules/.bin/npm ci
        working-directory: packages/daemon
      - run: ../../node_modules/.bin/npm ci
        working-directory: packages/ui

      - run: npm run build
      - run: npm run test:ci
      - run: npm run dist
        working-directory: packages/ui

  release:
    name: Release
    needs: ci
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14
      - name: Get npm cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-root-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-root-
      - name: Install dependencies
        run: npm ci
      - name: Create GitHub release
        id: semantic-release
        uses: cycjimmy/semantic-release-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Save new version number
        if: steps.semantic-release.outputs.new_release_published == 'true'
        run: |
          echo ${{ steps.semantic.outputs.new_release_version }} > version.txt
      - name: Upload new version number
        if: steps.semantic-release.outputs.new_release_published == 'true'
        uses: actions/upload-artifact@v2
        with:
          name: new-version
          path: version.txt

  upload-package:
    name: package-${{ matrix.os }}
    needs: release
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: Awala*.AppImage
          - os: windows-latest
            artifact_name: Awala*.exe
          - os: macos-latest
            artifact_name: Awala*.dmg
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14
      - name: Get npm cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ matrix.os }}-monorepo-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ matrix.os }}-monorepo-
      - name: Download new version number
        id: version-artefact
        uses: actions/download-artifact@v2
        with:
          name: new-version

      # TODO: Use `lerna bootstrap` (https://github.com/relaycorp/awala-gateway-desktop/issues/186)
      - run: npm ci
      - run: ../../node_modules/.bin/npm ci
        working-directory: packages/daemon
      - run: ../../node_modules/.bin/npm ci
        working-directory: packages/ui

      - name: Set version
        id: set-version
        run: |
          VERSION="cat ${{ steps.version-artefact.outputs.download-path }}"
          echo "::set-output name=version::${VERSION}"
          npm version ${VERSION}
        working-directory: packages/ui/app
      - run: npm run build
      - run: npm run dist
        working-directory: packages/ui
        env:
          WIN_CSC_LINK: ${{ secrets.WINDOWS_CODE_SIGNING_CERT }}
          WIN_CSC_KEY_PASSWORD: ${{ secrets.WINDOWS_CODE_SIGNING_PASSWORD }}
      - name: Upload installer to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.set-version.outputs.version }}
          file: packages/ui/dist/${{ matrix.artifact_name }}
          file_glob: true
